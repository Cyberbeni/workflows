name: Push tagged version to container registry

# on:
#   push:
#     tags: [ 'v*.*.*' ]
#
# jobs:
#   docker-push:
#     permissions:
#       contents: read
#       packages: write
#     uses: Cyberbeni/workflows/.github/workflows/docker-push.yml@master
#     with:
#       image_name: ${{ github.repository }}

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      qemu:
        required: false
        type: boolean
        default: false
      platforms:
        required: false
        type: string
        default: linux/amd64,linux/arm64

jobs:
  docker-push:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/docker/setup-qemu-action
      - if: ${{ inputs.qemu }}
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up BuildKit Docker container builder to be able to build multi-platform images
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/login-action
      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ inputs.image_name }}
          tags: |
            type=semver,pattern={{raw}}
            type=semver,pattern=v{{major}}

      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ inputs.platforms }}
          no-cache: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
